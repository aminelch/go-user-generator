stages:
  - lint
  - test
  - build
  - quality-gate
  - deploy

variables:
  GO_VERSION: "1.23.4"
  CGO_ENABLED: "1"
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
  GIT_DEPTH: "0"

lint:
  stage: lint
  image: golangci/golangci-lint:v1.23.6-alpine
  script:
    - golangci-lint run *.go --timeout=5m
  allow_failure: true

units-tests:
  stage: test
  image: "golang:$GO_VERSION"
  script:
    - go mod tidy
    - go test ./... -coverprofile=coverage.out
  artifacts:
    paths:
      - coverage.out
  needs:
    - lint

build:
  stage: build
  image: "golang:$GO_VERSION"
  script:
    - go mod tidy
    - go build -v -o api
  artifacts:
    paths:
      - api
  needs:
    - lint

sonarcloud-check:
  stage: quality-gate
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner
  only:
    - merge_requests
    - main

deploy-on-render:
  stage: deploy
  image: curlimages/curl:latest
  script:
    - echo "Launch Render deployment..."
    - curl https://api.render.com/deploy/$RENDER_SERVICE_NAME?key=$RUNDER_SERVICE_KEY
  needs:
    - build
  when: manual
  only:
    - main